<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Arron&#39;s Lab</title>
  
  <link href="/lunblog/atom.xml" rel="self"/>
  
  <link href="https://arronsh.github.io/lunblog/"/>
  <updated>2017-12-24T10:20:43.259Z</updated>
  <id>https://arronsh.github.io/lunblog/</id>
  
  <author>
    <name>a dba&#39;s blog</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS 7上安装PMM监控MySQL</title>
    <link href="https://arronsh.github.io/lunblog/2017/12/24/install-pmm/"/>
    <id>https://arronsh.github.io/lunblog/2017/12/24/install-pmm/</id>
    <published>2017-12-24T09:08:27.000Z</published>
    <updated>2017-12-24T10:20:43.259Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装PMM监控MySQL（CentOS-7）"><a href="#安装PMM监控MySQL（CentOS-7）" class="headerlink" title="安装PMM监控MySQL（CentOS 7）"></a>安装PMM监控MySQL（CentOS 7）</h1><h2 id="一、PMM介绍"><a href="#一、PMM介绍" class="headerlink" title="一、PMM介绍"></a>一、PMM介绍</h2><p>Percona Montoring and Management(PMM)是一款开源的用于管理和监控MySQL和MongoDB性能的开源平台，通过PMM客户端收集到的DB监控数据用第三方软件Grafana画图展示出来。</p>
<p>PMM提供了对MyISAM、InnoDB、TokuDB和PXC/Galera的监控，另外也提供了Query Analytics的功能，可以检视执行了哪些SQL指令，并对执行效能较差的语法进行优化。</p>
<p>PMM针对操作系统的部分也提供了硬盘、网络、CPU和RAM的监控，特别是它提供了Context switches、Processes和interrupts的监控，Conntext Switches可以看到CPU上下切换文的状况，Processes可以方便了解系统有多少程序在等待I/O</p>
<a id="more"></a>
<h2 id="二、PMM架构解析"><a href="#二、PMM架构解析" class="headerlink" title="二、PMM架构解析"></a>二、PMM架构解析</h2><p> <img src="/media/pic_20171224_1.png" alt="屏幕快照 2017-12-24 下午12.48.54"></p>
<ul>
<li>PMM Server：Server组件，作为Docker镜像提供的<ul>
<li>Query Analytics（QAN）是用来搜集指令并作性能分析的，其组件分别如下：<ul>
<li>QAN API：作为percona-qan-agent后端储存和读取Query资料用</li>
<li>QAN APP：提供图形化分析界面</li>
</ul>
</li>
<li>Metrics Monitor（MM）组件提供了MySQL和MongoDB历史监控信息，其组件分别如下：<ul>
<li>Prometheus：一个开源的服务监控系统和时间序列数据库，它连接到PMM Client上的exporter聚集DB的监控数据</li>
<li>Consul：提供API让PMM Client可以远端替Prometheus新增，移除hosts，同时它也储存了监控的metadata。</li>
<li>Grafana：这是一个第三方Dashboard和图形构建器，用于可视化Prometheus中聚合的数据，以web呈现。</li>
<li>Percona Dashboards：是由Percona开发的一组用于Grafana的仪表板</li>
</ul>
</li>
<li>上述的2个Web页面都能从PMM Landing Page（就是PMM首页）直接连结</li>
</ul>
</li>
<li>PMM Client：Client组件，一般以RPM包方式提供<ul>
<li>pmm-admin：命令行的PMM Client管理工具，用来新增、移除监控的资料instance</li>
<li>percona-qan-agent：用于搜集QAN查询效能性能资料，同时连接和传送资料给PMM Server中的QAN API</li>
<li>node_exporter：Prometheus exporter用于收集一般系统信息<a href="https://github.com/prometheus/node_exporter" target="_blank" rel="external">https://github.com/prometheus/node_exporter</a>。</li>
<li>mysqld_exporter：Prometheus exporter用于收集MySQL Server的信息<a href="https://github.com/percona/mysqld_exporter" target="_blank" rel="external">https://github.com/percona/mysqld_exporter</a>。</li>
<li>mongodb_exporter：Prometheus exporter用于收集MongoDB Server的信息<a href="https://github.com/percona/mongodb_exporter" target="_blank" rel="external">https://github.com/percona/mongodb_exporter</a>。</li>
</ul>
</li>
</ul>
<h2 id="三、安装PMM-Server"><a href="#三、安装PMM-Server" class="headerlink" title="三、安装PMM Server"></a>三、安装PMM Server</h2><p>PMM Server是使用Docker镜像发布的，首要条件是安装Docker 1.13或更高版本，下面以CentOS 7系统为例说明。</p>
<h3 id="1-安装Docker"><a href="#1-安装Docker" class="headerlink" title="1. 安装Docker"></a>1. 安装Docker</h3><p><strong>使用yum进行安装</strong></p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># step 1: 安装必要的一些系统工具</span></div><div class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</div><div class="line"></div><div class="line"><span class="meta"># Step 2: 添加软件源信息</span></div><div class="line">yum-config-manager --add-repo http:<span class="comment">//mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></div><div class="line"></div><div class="line"><span class="meta"># Step 3: 更新并安装 Docker-CE</span></div><div class="line">yum makecache fast</div><div class="line">yum -y install docker-ce</div><div class="line"></div><div class="line"><span class="meta"># Step 4: 开启Docker服务</span></div><div class="line">service docker start</div></pre></td></tr></table></figure>
<p><strong>安装校验</strong></p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="string">[root@dbsrv1</span> <span class="string">opt]#</span> <span class="string">docker</span> <span class="string">version</span></div><div class="line"><span class="attr">Client:</span></div><div class="line"><span class="attr"> Version:</span>      <span class="number">17.09</span><span class="number">.1</span><span class="bullet">-ce</span></div><div class="line"> <span class="string">API</span> <span class="attr">version:</span>  <span class="number">1.32</span></div><div class="line"> <span class="string">Go</span> <span class="attr">version:</span>   <span class="string">go1.8.3</span></div><div class="line"> <span class="string">Git</span> <span class="attr">commit:</span>   <span class="number">19e2</span><span class="string">cf6</span></div><div class="line"><span class="attr"> Built:</span>        <span class="string">Thu</span> <span class="string">Dec</span>  <span class="number">7</span> <span class="number">22</span><span class="string">:23:40</span> <span class="number">2017</span></div><div class="line"> <span class="string">OS/Arch:</span>      <span class="string">linux/amd64</span></div><div class="line"></div><div class="line"><span class="attr">Server:</span></div><div class="line"><span class="attr"> Version:</span>      <span class="number">17.09</span><span class="number">.1</span><span class="bullet">-ce</span></div><div class="line"> <span class="string">API</span> <span class="attr">version:</span>  <span class="number">1.32</span> <span class="string">(minimum</span> <span class="string">version</span> <span class="number">1.12</span><span class="string">)</span></div><div class="line"> <span class="string">Go</span> <span class="attr">version:</span>   <span class="string">go1.8.3</span></div><div class="line"> <span class="string">Git</span> <span class="attr">commit:</span>   <span class="number">19e2</span><span class="string">cf6</span></div><div class="line"><span class="attr"> Built:</span>        <span class="string">Thu</span> <span class="string">Dec</span>  <span class="number">7</span> <span class="number">22</span><span class="string">:25:03</span> <span class="number">2017</span></div><div class="line"> <span class="string">OS/Arch:</span>      <span class="string">linux/amd64</span></div><div class="line"><span class="attr"> Experimental:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
<p><strong>配置Docker镜像加速器</strong></p>
<p>由于网络原因，下载官方镜像的速度超级慢，可以使用阿里云容器Hub服务提供的官方镜像站点来加速官方镜像的下载速度</p>
<p>针对Docker客户端版本大于1.10.0的CentOS用户，可以通过修改daemon配置文件<code>/etc/docker/daemon.json</code>来使用加速器：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mkdir -<span class="selector-tag">p</span> /etc/docker</div><div class="line">tee /etc/docker/daemon<span class="selector-class">.json</span> &lt;&lt;-<span class="string">'EOF'</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://0csf00y6.mirror.aliyuncs.com"</span>]</div><div class="line">&#125;</div><div class="line">EOF</div><div class="line">systemctl daemon-reload</div><div class="line">systemctl restart docker</div></pre></td></tr></table></figure>
<p><strong>说明：</strong></p>
<p>关于加速器的地址，需要登录<a href="https://cr.console.aliyun.com" target="_blank" rel="external">容器Hub服务</a>申请即可，需要有阿里云账号</p>
<h3 id="2-获取PMM-Server镜像文件"><a href="#2-获取PMM-Server镜像文件" class="headerlink" title="2. 获取PMM Server镜像文件"></a>2. 获取PMM Server镜像文件</h3><figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker pull percona/pmm-<span class="keyword">server</span>:latest</div></pre></td></tr></table></figure>
<h3 id="3-创建PMM数据容器"><a href="#3-创建PMM数据容器" class="headerlink" title="3. 创建PMM数据容器"></a>3. 创建PMM数据容器</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">docker create \</div><div class="line">    -v /opt/prometheus/data \</div><div class="line">    -v /opt/consul-data \</div><div class="line">    -v /var/<span class="class"><span class="keyword">lib</span>/<span class="title">mysql</span> \</span></div><div class="line">    -v /var/<span class="class"><span class="keyword">lib</span>/<span class="title">grafana</span> \</span></div><div class="line">    --name pmm-data \</div><div class="line">    percona/pmm-<span class="symbol">server:</span>latest /bin/<span class="literal">true</span></div></pre></td></tr></table></figure>
<p>此时容器不运行，它只是存在，以确保你在升级到较新的pmm-server时保留所有PMM数据。不要删除或重新创建此容器，除非你打算清除所有PMM数据并重新开始。</p>
<p>上面的命令执行以下操作：</p>
<ul>
<li><code>docker create</code>：该命令指示Docker守护程序</li>
<li><code>-v</code>：该选项初始化数据卷的容器</li>
<li><code>--name</code>：该选项为你可以用于引用Docker网络中的容器分配一个自定义名称</li>
<li><code>ercona/pmm-server:latest</code>：是导出容器的镜像名称和版本，latest表示最新版本</li>
<li><code>/bin/true</code>：是容器运行的命令</li>
</ul>
<h3 id="4-运行PMM容器"><a href="#4-运行PMM容器" class="headerlink" title="4. 运行PMM容器"></a>4. 运行PMM容器</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">docker run -d \</div><div class="line">    -<span class="ruby">p <span class="number">80</span><span class="symbol">:</span><span class="number">80</span> \</span></div><div class="line"><span class="ruby">    --volumes-from pmm-data \</span></div><div class="line"><span class="ruby">    --name pmm-server \</span></div><div class="line"><span class="ruby">    --restart always \</span></div><div class="line"><span class="ruby">    percona/pmm-<span class="symbol">server:</span>latest</span></div></pre></td></tr></table></figure>
<p>以上的命令执行以下操作：</p>
<ul>
<li><code>docker run</code>：该命令指示守护程序从镜像运行容器</li>
<li><code>-d</code>：该选项在分离模式（即后台）中启动容器</li>
<li><code>-p</code>：该选项映射用于访问PMM服务器Web UI的端口，例如-p 8080:80，如果端口80不可用，则可以使用登录页面映射到端口8080</li>
<li><code>--volumes-from</code>：该选项从pmm-data容器中装入卷</li>
<li><code>--name</code>：该选项为你可以用于引用Docker网络中的容器分配一个自定义名称</li>
<li><code>--restart</code>：该选项定义容器的重新启动策略，设置它以always确保Docker守护程序在启动时启动容器，并在容器退出时重新启动它</li>
<li><code>percona/pmm-server:latest</code>：是导出容器的镜像名称和版本</li>
</ul>
<h3 id="5-验证PMM-Server安装"><a href="#5-验证PMM-Server安装" class="headerlink" title="5. 验证PMM Server安装"></a>5. 验证PMM Server安装</h3><p>查看Docker运行状态</p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@dbsrv1 opt]<span class="meta"># docker ps</span></div><div class="line">CONTAINER ID        IMAGE                       COMMAND                CREATED             STATUS              PORTS                         NAMES</div><div class="line"><span class="number">26</span>a60e9b504f        percona/pmm-<span class="keyword">server</span>:latest   <span class="string">"/opt/entrypoint.sh"</span>   <span class="number">4</span> minutes ago       Up <span class="number">4</span> minutes        <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">80</span>-&gt;<span class="number">80</span>/tcp, <span class="number">443</span>/tcp   pmm-<span class="keyword">server</span></div></pre></td></tr></table></figure>
<p>运行PMM Server之后，可以使用运行容器的主机IP地址(192.168.56.130)访问PMM Web界面。<br><img src="/media/pic_20171224_2.png" alt="屏幕快照 2017-12-24 下午2.22.50"></p>
<h2 id="四、安装PMM-Client"><a href="#四、安装PMM-Client" class="headerlink" title="四、安装PMM Client"></a>四、安装PMM Client</h2><p>PMM Client是安装在你要监视的MySQL或MongoDB主机上的一组代理组件。用于收集关于一般系统和数据库性能的各种数据，并将这些数据发送到相应的PMM服务器组件。</p>
<p>PMM Client可以运行在任何Linux发行版本上，这里已CentOS 7为例。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> rpm -ivh https://www.percona.com/downloads/pmm-client/LATEST/pmm-client-1.5.3-1.x86_64.rpm </span></div><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">which</span> pmm-admin</span></div><div class="line">/usr/sbin/pmm-admin</div></pre></td></tr></table></figure>
<p>pmm-admin工具用来管理PMM客户端，该工具需要root访问权限。该命令详细用法查看help或官方文档</p>
<h3 id="五、添加MySQL监控"><a href="#五、添加MySQL监控" class="headerlink" title="五、添加MySQL监控"></a>五、添加MySQL监控</h3><h3 id="1-连接PMM服务器"><a href="#1-连接PMM服务器" class="headerlink" title="1. 连接PMM服务器"></a>1. 连接PMM服务器</h3><p>安装PMM Client之后，它不会自动连接到PMM Server上。要将客户端连接到PMM服务器，请使用下面命令，指定PMM Server的IP地址</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@node1 vagrant]# pmm-admin<span class="built_in"> config </span>--server 192.168.56.130</div><div class="line">OK, PMM<span class="built_in"> server </span>is alive.</div><div class="line"></div><div class="line">PMM<span class="built_in"> Server </span>     | 192.168.56.130</div><div class="line">Client Name     | node2</div><div class="line">Client<span class="built_in"> Address </span> | 192.168.56.111</div></pre></td></tr></table></figure>
<h3 id="2-创建监控账号"><a href="#2-创建监控账号" class="headerlink" title="2. 创建监控账号"></a>2. 创建监控账号</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">root@localhost:mysql3306.sock [(none)]&gt;grant all <span class="literal">on</span> *.* <span class="keyword">to</span> <span class="string">'monitor'</span>@<span class="string">'localhost'</span> identified <span class="keyword">by</span> <span class="string">'123123'</span>;</div><div class="line">Query OK, <span class="number">0</span> rows affected, <span class="number">1</span> warning (<span class="number">0.01</span> sec)</div><div class="line"></div><div class="line">root@localhost:mysql3306.sock [(none)]&gt;flush privileges;</div><div class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.01</span> sec)</div></pre></td></tr></table></figure>
<h3 id="3-添加MySQL监控和主机监控"><a href="#3-添加MySQL监控和主机监控" class="headerlink" title="3. 添加MySQL监控和主机监控"></a>3. 添加MySQL监控和主机监控</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[<span class="meta">root@node1 ~</span>]<span class="meta"># pmm-admin add mysql --user monitor --password='123123' --host localhost --port 3306</span></div><div class="line">[<span class="meta">linux:metrics</span>] OK, now monitoring <span class="keyword">this</span> system.</div><div class="line">[<span class="meta">mysql:metrics</span>] OK, now monitoring MySQL metrics <span class="keyword">using</span> DSN monitor:***@unix(/tmp/mysql3306.sock)</div><div class="line">[<span class="meta">mysql:queries</span>] OK, now monitoring MySQL queries <span class="keyword">from</span> slowlog <span class="keyword">using</span> DSN monitor:***@unix(/tmp/mysql3306.sock)</div></pre></td></tr></table></figure>
<p>pmm client收集的监控数据来源有这么几个方面：</p>
<ul>
<li>MySQL所在机器的系统指标（linux:meteric）</li>
<li>MySQL的performance_schema（mysql:meteric）</li>
<li>MySQL慢查询日志（mysql:queries）</li>
</ul>
<p>查看配置后的结果</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]# pmm-admin list</div><div class="line">pmm-admin 1.5.3</div><div class="line"></div><div class="line">PMM<span class="built_in"> Server </span>     | 192.168.56.130</div><div class="line">Client Name     | node1</div><div class="line">Client<span class="built_in"> Address </span> | 192.168.56.110</div><div class="line">Service Manager | linux-systemd</div><div class="line"></div><div class="line">-------------- ------ ----------- -------- -------------------------------------- ------------------------------------------</div><div class="line">SERVICE<span class="built_in"> TYPE </span>  NAME   LOCAL<span class="built_in"> PORT </span> RUNNING  DATA SOURCE                            OPTIONS</div><div class="line">-------------- ------ ----------- -------- -------------------------------------- ------------------------------------------</div><div class="line">mysql:queries  node1  -           <span class="literal">YES</span>      monitor:***@unix(/tmp/mysql3306.sock)  <span class="attribute">query_source</span>=slowlog, <span class="attribute">query_examples</span>=<span class="literal">true</span></div><div class="line">linux:metrics  node1  42000       <span class="literal">YES</span>      -</div><div class="line">mysql:metrics  node1  42002       <span class="literal">YES</span>      monitor:***@unix(/tmp/mysql3306.sock)</div></pre></td></tr></table></figure>
<p>查看exporter监听端口</p>
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]# netstat -nlpt|grep export</div><div class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">192.168</span><span class="meta">.56</span><span class="meta">.111</span>:<span class="number">42000</span>    <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:*               LISTEN      <span class="number">5277</span>/node_exporter</div><div class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">192.168</span><span class="meta">.56</span><span class="meta">.111</span>:<span class="number">42002</span>    <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:*               LISTEN      <span class="number">5312</span>/mysqld_exporte</div></pre></td></tr></table></figure>
<h2 id="六、查看监控平台"><a href="#六、查看监控平台" class="headerlink" title="六、查看监控平台"></a>六、查看监控平台</h2><p>使用运行PMM Server的主机IP访问PMM Web界面，目标网页链接到相应的PMM工具：</p>
<table>
<thead>
<tr>
<th style="text-align:left">Component</th>
<th>URL</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">PMM landing page</td>
<td><a href="http://192.168.56.130" target="_blank" rel="external">http://192.168.56.130</a></td>
<td>PMM跳转页</td>
</tr>
<tr>
<td style="text-align:left">Query Analytics (QAN web app)</td>
<td><a href="http://192.168.56.130/qan" target="_blank" rel="external">http://192.168.56.130/qan</a></td>
<td>SQL慢日志分析</td>
</tr>
<tr>
<td style="text-align:left">Metrics Monitor (Grafana)</td>
<td><a href="http://192.168.56.130/graph" target="_blank" rel="external">http://192.168.56.130/graph</a></td>
<td>监控指标图标，user name:admin, password:admin</td>
</tr>
<tr>
<td style="text-align:left">Orchestrator</td>
<td><a href="http://192.168.56.130/orchestrator" target="_blank" rel="external">http://192.168.56.130/orchestrator</a></td>
<td>MySQL集群拓扑结构</td>
</tr>
</tbody>
</table>
<h3 id="1-指标监控"><a href="#1-指标监控" class="headerlink" title="1. 指标监控"></a>1. 指标监控</h3><p>该监控工具提供了对数据库服务器的关键指标，基于时间的图标展示。</p>
<p>通过主题分为若干个仪表板，一些与MySQL或MongoDB相关，其他的则提供了一般的系统指标</p>
<p>要访问仪表板，需要提供默认用户：admin，密码：admin</p>
<p><img src="/media/pic_20171224_3.png" alt="屏幕快照 2017-12-24 下午3.30.16"></p>
<h3 id="2-慢查询分析"><a href="#2-慢查询分析" class="headerlink" title="2. 慢查询分析"></a>2. 慢查询分析</h3><p>该查询分析工具，使数据库管理员和应用程序开发人员分析一段时间内的MySQL查询，发现性能问题，优化数据库性能。</p>
<p>PMM使用slow log作为查询源（还可以以performance_schema作为数据源），记得需要开启慢查询日志。</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">slow_query_log=1   <span class="comment">#开启慢查询日志；</span></div><div class="line">long_query_time=0  <span class="comment">#超过多少秒的查询就写入日志；</span></div></pre></td></tr></table></figure>
<p>以下图片显示了Query Analytics</p>
<p><img src="/media/pic_20171224_4.png" alt="屏幕快照 2017-12-24 下午3.58.00"></p>
<p>汇总表包含以%GTT(总计时间的百分比)排名的前十名查询，这是MySQL服务器执行特定查询所花费的时间百分比，与在所选期间执行所有查询的总时间相比。</p>
<p>在汇总表上单击，可以获取该查询的详细信息，包括该SQL的所有指标，SQL语句示例，explain等</p>
<p>另外查询数据的默认源是慢查询日志，可以调整为Performance Schema。</p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ol>
<li><a href="https://www.percona.com/doc/percona-monitoring-and-management/index.html" target="_blank" rel="external">https://www.percona.com/doc/percona-monitoring-and-management/index.html</a></li>
<li><a href="http://www.ywnds.com/?p=9713" target="_blank" rel="external">http://www.ywnds.com/?p=9713</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装PMM监控MySQL（CentOS-7）&quot;&gt;&lt;a href=&quot;#安装PMM监控MySQL（CentOS-7）&quot; class=&quot;headerlink&quot; title=&quot;安装PMM监控MySQL（CentOS 7）&quot;&gt;&lt;/a&gt;安装PMM监控MySQL（CentOS 7）&lt;/h1&gt;&lt;h2 id=&quot;一、PMM介绍&quot;&gt;&lt;a href=&quot;#一、PMM介绍&quot; class=&quot;headerlink&quot; title=&quot;一、PMM介绍&quot;&gt;&lt;/a&gt;一、PMM介绍&lt;/h2&gt;&lt;p&gt;Percona Montoring and Management(PMM)是一款开源的用于管理和监控MySQL和MongoDB性能的开源平台，通过PMM客户端收集到的DB监控数据用第三方软件Grafana画图展示出来。&lt;/p&gt;
&lt;p&gt;PMM提供了对MyISAM、InnoDB、TokuDB和PXC/Galera的监控，另外也提供了Query Analytics的功能，可以检视执行了哪些SQL指令，并对执行效能较差的语法进行优化。&lt;/p&gt;
&lt;p&gt;PMM针对操作系统的部分也提供了硬盘、网络、CPU和RAM的监控，特别是它提供了Context switches、Processes和interrupts的监控，Conntext Switches可以看到CPU上下切换文的状况，Processes可以方便了解系统有多少程序在等待I/O&lt;/p&gt;
    
    </summary>
    
    
      <category term="pmm" scheme="https://arronsh.github.io/lunblog/tags/pmm/"/>
    
  </entry>
  
  <entry>
    <title>Dataguard故障--MRP进程终止</title>
    <link href="https://arronsh.github.io/lunblog/2017/08/14/datagurad-mrp/"/>
    <id>https://arronsh.github.io/lunblog/2017/08/14/datagurad-mrp/</id>
    <published>2017-08-14T13:29:57.000Z</published>
    <updated>2017-08-14T13:33:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、现象"><a href="#一、现象" class="headerlink" title="一、现象"></a>一、现象</h2><p>昨天凌晨DG告警，MRP进程不存在：</p>
<pre><code>***** bsCentreon *****

Notification Type: PROBLEM

Service: check_dataguard_mrp
Host: db_dg_bs
Address: *.*.*.*
State: CRITICAL

Date/Time: Thu Jul 13 22:59:29 CST 2017

Additional Info:

CRITICAL!-DataGuards MRP0 process is crash, please check it!
</code></pre><a id="more"></a>    
<h2 id="二、故障诊断"><a href="#二、故障诊断" class="headerlink" title="二、故障诊断"></a>二、故障诊断</h2><h3 id="1-登上DG服务器查看MRP进程"><a href="#1-登上DG服务器查看MRP进程" class="headerlink" title="1. 登上DG服务器查看MRP进程:"></a>1. 登上DG服务器查看MRP进程:</h3><pre><code>ps -ef|grep mrp
</code></pre><p>或者</p>
<pre><code>select pid, process, status, sequence#, delay_mins, block#, blocks
  from v$managed_standby
 order by sequence#;
</code></pre><p>都没发现MRP进程的相关信息
　</p>
<h3 id="2-查看错误日志"><a href="#2-查看错误日志" class="headerlink" title="2. 查看错误日志"></a>2. 查看错误日志</h3><pre><code>$vi alter_xxx.log

Thu Jul 13 22:44:22 2017
File #42 added to control file as &apos;UNNAMED00042&apos; because
the parameter STANDBY_FILE_MANAGEMENT is set to MANUAL
The file should be manually created to continue.
MRP0: Background Media Recovery terminated with error 1274
Errors in file /data/app/oracle/diag/rdbms/masadbdgbs/masadb/trace/masadb_pr00_15599.trc:
ORA-01274: cannot add datafile &apos;+DATA01/masadb/datafile/ts_part_table4_1.dbf&apos; - file could not be created
Managed Standby Recovery not using Real Time Apply
Recovery interrupted!
Recovered data files to a consistent state at change 5706142969
Thu Jul 13 22:44:24 2017
MRP0: Background Media Recovery process shutdown (masadb)
</code></pre><p>发现在故障报出的时间点前，MRP进程确实shutdown了。</p>
<h3 id="3-故障分析"><a href="#3-故障分析" class="headerlink" title="3. 故障分析"></a>3. 故障分析</h3><ol>
<li>主库上新添加的数据文件<code>+DATA01/masadb/datafile/ts_part_table4_1.dbf</code>没有同步到DG备库上。</li>
<li><p>再往上看发现这样的字样：</p>
 <figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">File</span> <span class="string">#42</span> added <span class="keyword">to</span> control <span class="keyword">file</span> <span class="keyword">as</span> <span class="string">'UNNAMED00042'</span> because</div><div class="line">    the parameter STANDBY_FILE_MANAGEMENT <span class="keyword">is</span> <span class="keyword">set</span> <span class="keyword">to</span> MANUAL</div><div class="line">    The <span class="keyword">file</span> should be manually created <span class="keyword">to</span> <span class="keyword">continue</span>.</div></pre></td></tr></table></figure>
<p> 42号文件由于参数<code>STANDBY_FILE_MANAGEMENT=MANUAL</code>的原因，没有被正确创建，命名为’UNNAMED00042’</p>
</li>
<li>查看相关视图：<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">SQL&gt; show parameter standby_file_management</div><div class="line"></div><div class="line">NAME                    <span class="built_in"> TYPE </span>    VALUE</div><div class="line">------------------------------------ ----------- ------------------------------</div><div class="line">standby_file_management          string     MANUAL</div><div class="line"></div><div class="line">SQL&gt; select file_name <span class="keyword">from</span> dba_data_files where <span class="attribute">file_id</span>=42;</div><div class="line"></div><div class="line"><span class="literal">no</span> rows selected</div><div class="line"></div><div class="line">SQL&gt; select name <span class="keyword">from</span> v<span class="variable">$datafile</span> where file#=42;</div><div class="line"></div><div class="line">NAME</div><div class="line">--------------------------------------------------------------------------------</div><div class="line">/data/app/oracle/product/11.2.0/db_1/dbs/UNNAMED00042</div></pre></td></tr></table></figure>
</li>
</ol>
<p>至此已经清楚故障的原因了：</p>
<ol>
<li>由于<code>standby_file_management=MANUAL</code>，导致主库新添加的数据文件，在传到从库时路径不一致不能自动创建，并命名为’UNNAMED00042’</li>
<li>由于新数据文件不存在，导致MRP在应用日志是出错而crash。</li>
<li>至于standby_file_management参数，是由于上次维护DG时，将手工设置为MANUAL，方便进行redo log文件的清理。而事后未调整回AUTO所致</li>
</ol>
<h3 id="4-处理方案"><a href="#4-处理方案" class="headerlink" title="4. 处理方案"></a>4. 处理方案</h3><pre><code># 注意，该命令执行必须要确保standby_file_management=MANUAL，否则会报错
SQL&gt; ALTER DATABASE CREATE DATAFILE &apos;/data/app/oracle/product/11.2.0/db_1/dbs/UNNAMED00042&apos; as &apos;/data/oradata/masadb/ts_part_table4_1.dbf&apos;;

SQL&gt; alter database recover managed standby database using current logfile disconnect from session;
</code></pre><p>观察日志输出，MRP进程启动，能够正确应用日志</p>
<p>别忘了把参数改回来</p>
<pre><code>ALTER SYSTEM SET standby_file_management=&apos;AUTO&apos;;
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、现象&quot;&gt;&lt;a href=&quot;#一、现象&quot; class=&quot;headerlink&quot; title=&quot;一、现象&quot;&gt;&lt;/a&gt;一、现象&lt;/h2&gt;&lt;p&gt;昨天凌晨DG告警，MRP进程不存在：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;***** bsCentreon *****

Notification Type: PROBLEM

Service: check_dataguard_mrp
Host: db_dg_bs
Address: *.*.*.*
State: CRITICAL

Date/Time: Thu Jul 13 22:59:29 CST 2017

Additional Info:

CRITICAL!-DataGuards MRP0 process is crash, please check it!
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="dataguard" scheme="https://arronsh.github.io/lunblog/tags/dataguard/"/>
    
  </entry>
  
  <entry>
    <title>远程机房Dataguard出现GAP问题处理</title>
    <link href="https://arronsh.github.io/lunblog/2017/08/14/datagurad-gap/"/>
    <id>https://arronsh.github.io/lunblog/2017/08/14/datagurad-gap/</id>
    <published>2017-08-14T13:00:05.000Z</published>
    <updated>2017-08-14T13:05:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>##故障现象<br>远程机房Dataguard告警系统报警出现GAP，登陆备库查看相关视图和日志</p>
<a id="more"></a>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 视图查询</span></div><div class="line">SQL&gt; select <span class="built_in">name</span>,value <span class="keyword">from</span> v$dataguard_stats;</div><div class="line"></div><div class="line">NAME                             VALUE</div><div class="line"><span class="comment">-------------------------------- ----------------------------------------------------------------</span></div><div class="line">transport lag                    +<span class="number">02</span> <span class="number">00</span>:<span class="number">34</span>:<span class="number">43</span></div><div class="line">apply lag                        +<span class="number">02</span> <span class="number">00</span>:<span class="number">34</span>:<span class="number">43</span></div><div class="line">apply finish <span class="built_in">time</span>                +<span class="number">00</span> <span class="number">00</span>:<span class="number">01</span>:<span class="number">28.220</span></div><div class="line">estimated startup <span class="built_in">time</span>           <span class="number">17</span></div><div class="line"></div><div class="line"><span class="comment">-- 日志查询</span></div><div class="line">Fri Jun <span class="number">03</span> <span class="number">12</span>:<span class="number">39</span>:<span class="number">10</span> <span class="number">2016</span></div><div class="line">WARN: ARC2: Terminating pid <span class="number">20229</span> hung <span class="keyword">on</span> an I/O operation</div><div class="line">krsv_proc_kill: Killing <span class="number">1</span> processes (Process <span class="keyword">by</span> index)</div><div class="line">Fri Jun <span class="number">03</span> <span class="number">12</span>:<span class="number">39</span>:<span class="number">10</span> <span class="number">2016</span></div><div class="line">WARN: ARCH: Terminating pid <span class="number">20229</span> hung <span class="keyword">on</span> an I/O operation</div><div class="line">WARN: ARCH: Terminating pid <span class="number">20233</span> hung <span class="keyword">on</span> an I/O operation</div><div class="line">krsv_proc_kill: Killing <span class="number">1</span> processes (Process <span class="keyword">by</span> index)</div><div class="line">Fri Jun <span class="number">03</span> <span class="number">12</span>:<span class="number">39</span>:<span class="number">15</span> <span class="number">2016</span></div><div class="line">FAL[client]: Failed <span class="keyword">to</span> request gap sequence</div><div class="line"> GAP - thread <span class="number">2</span> sequence <span class="number">1648</span><span class="number">-1662</span></div><div class="line"> DBID <span class="number">1666528406</span> branch <span class="number">867683567</span></div><div class="line">FAL[client]: All defined FAL servers have been attempted.</div><div class="line"><span class="comment">------------------------------------------------------------</span></div><div class="line">Check <span class="keyword">that</span> <span class="keyword">the</span> CONTROL_FILE_RECORD_KEEP_TIME initialization</div><div class="line">parameter <span class="keyword">is</span> defined <span class="keyword">to</span> a value <span class="keyword">that</span>`s sufficiently large</div><div class="line">enough <span class="keyword">to</span> maintain adequate <span class="built_in">log</span> switch information <span class="keyword">to</span> resolve</div><div class="line">archivelog gaps.</div><div class="line"><span class="comment">------------------------------------------------------------</span></div></pre></td></tr></table></figure>
<p>##原因分析<br>由于前两天在主库上多几张大表（包括CLOB）进行处理，转移到历史表中，产生了大量的归档日志（超过80G），而远程机房是通过2M专线与本地机房相连，大日志传输到备机需要时间超时，导致DG无法正常完成归档日志的接收，进而出现归档日志的GAP。<br><strong>解决gap的步骤：</strong></p>
<ol>
<li>在备库获得gap的详细信息</li>
<li>将需要的归档日志从主库拷贝到备库</li>
<li>备库将归档日志注册，然后应用。</li>
</ol>
<p>##处理方法</p>
<ul>
<li><p>停止归档日志对远程机房DG的传输</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SQL&gt; alter<span class="built_in"> system </span><span class="builtin-name">set</span> <span class="attribute">log_archive_dest_state_3</span>=<span class="string">'defer'</span> <span class="attribute">sid</span>=<span class="string">'*'</span>;</div><div class="line">SQL&gt; show parameter log_archive_dest_state_3;</div><div class="line"></div><div class="line">NAME                                <span class="built_in"> TYPE </span>       VALUE</div><div class="line">------------------------------------ ----------- ------------------------------</div><div class="line">log_archive_dest_state_3             string      defer</div></pre></td></tr></table></figure>
</li>
<li><p>查询备库缺失的归档日志</p>
<figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SQL&gt; select thread#, low_sequence#, high_sequence# <span class="keyword">from</span> v$archive_gap;</div><div class="line"></div><div class="line">   THREAD# LOW_SEQUENCE# HIGH_SEQUENCE#</div><div class="line">---------- ------------- --------------</div><div class="line">     <span class="number">2</span>        <span class="number">1648</span>       <span class="number">1662</span></div></pre></td></tr></table></figure>
</li>
<li><p>组装归档日志的拷贝语句<br>如果归档日志在ASM中，先通过rman将归档日志拷贝到OS，然后scp到备库standby归档目录；<br>如果归档日志在OS上，直接scp到备库standby归档目录即可。</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">-- 主库</div><div class="line">--生产rman用的日志拷贝命令</div><div class="line">select 'copy archivelog ''' <span class="string">|| NAME || ''' to ''/tmp/' || substr(name, 43,1)||'_'|| substr(name, 49,4) ||'_867683567.dbf'' ;'</span></div><div class="line">  from v$archived_log</div><div class="line"> where sequence<span class="meta"># &gt;= 1648</span></div><div class="line">   and sequence<span class="meta"># &lt;= 1662</span></div><div class="line">   and thread<span class="meta"># = 2</span></div><div class="line">   and dest_id = <span class="number">1</span>;  </div><div class="line"></div><div class="line">-- 把归档日志从ASM拷贝到OS上</div><div class="line">rman target /</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1648.52</span>2.<span class="number">91337825</span>3' to '/tmp/2_<span class="number">1648</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1649.52</span>3.<span class="number">91337831</span>5' to '/tmp/2_<span class="number">1649</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1650.52</span>4.<span class="number">91337836</span>1' to '/tmp/2_<span class="number">1650</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1651.52</span>6.<span class="number">91337839</span>1' to '/tmp/2_<span class="number">1651</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1652.52</span>7.<span class="number">91337842</span>7' to '/tmp/2_<span class="number">1652</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1653.52</span>8.<span class="number">91337846</span>5' to '/tmp/2_<span class="number">1653</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1654.53</span>0.<span class="number">91337851</span>7' to '/tmp/2_<span class="number">1654</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1655.53</span>1.<span class="number">91337858</span>5' to '/tmp/2_<span class="number">1655</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1656.53</span>2.<span class="number">91337867</span>5' to '/tmp/2_<span class="number">1656</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1657.53</span>5.<span class="number">91337917</span>7' to '/tmp/2_<span class="number">1657</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1658.53</span>6.<span class="number">91337930</span>5' to '/tmp/2_<span class="number">1658</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1659.53</span>7.<span class="number">91337942</span>3' to '/tmp/2_<span class="number">1659</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1660.53</span>9.<span class="number">91337958</span>3' to '/tmp/2_<span class="number">1660</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1661.54</span>1.<span class="number">91338116</span>3' to '/tmp/2_<span class="number">1661</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line">copy archivelog '+ARCH/masadb/archivelog/<span class="number">2016</span>_06_01/thread_2_seq_<span class="number">1662.54</span>2.<span class="number">91338128</span>1' to '/tmp/2_<span class="number">1662</span>_<span class="number">86768356</span>7.dbf' ;</div><div class="line"></div><div class="line">-- 在主库上执行，生成standby上需要的归档日志注册语句</div><div class="line">select 'ALTER DATABASE REGISTER PHYSICAL LOGFILE ''/tmp/' <span class="string">|| substr(name, 43,1)||'_'|| substr(name, 49,4) ||'_867683567.dbf'';'</span></div><div class="line">  from v$archived_log</div><div class="line"> where sequence<span class="meta"># &gt;= 1648</span></div><div class="line">   and sequence<span class="meta"># &lt;= 1662</span></div><div class="line">   and thread<span class="meta"># = 2</span></div><div class="line">   and dest_id = <span class="number">1</span>;</div><div class="line"></div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1648</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1649</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1650</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1651</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1652</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1653</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1654</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1655</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1656</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1657</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1658</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1659</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1660</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1661</span>_<span class="number">86768356</span>7.dbf';</div><div class="line">ALTER DATABASE REGISTER PHYSICAL LOGFILE '/tmp/2_<span class="number">1662</span>_<span class="number">86768356</span>7.dbf';</div></pre></td></tr></table></figure>
</li>
<li><p>拷贝归档日志到远程DG上</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">-- 网络环境理想，文件不大的话用scp</div><div class="line"><span class="variable">$ </span>scp <span class="number">2_16</span>* oracle<span class="variable">@10</span>.<span class="number">1.1</span>.<span class="number">10</span><span class="symbol">:/tmp</span></div><div class="line"></div><div class="line">-- 网络环境差，经常会断线的话，可以使用rsync（支持断点续传）</div><div class="line">-- 自定义脚本</div><div class="line">[oracle<span class="variable">@DB_DG_BS</span> ~]<span class="variable">$ </span>cat rsync_cp.sh </div><div class="line"><span class="comment">#!/bin/bash</span></div><div class="line"><span class="comment"># rsync_cp.sh</span></div><div class="line"></div><div class="line">export RSYNC_RSH=<span class="string">"ssh -o ServerAliveInterval=15 -o ServerAliveCountMax=2"</span></div><div class="line">rsyncSrcFile=<span class="variable">$1</span></div><div class="line">rsyncDestFile=<span class="variable">$2</span></div><div class="line">rsyncSuccess=-<span class="number">1</span></div><div class="line"><span class="keyword">while</span> [ <span class="variable">$rsyncSuccess</span> -ne <span class="number">0</span> ]</div><div class="line"><span class="keyword">do</span></div><div class="line"> rsync -v -P --partial --inplace <span class="variable">$rsyncSrcFile</span> <span class="variable">$rsyncDestFile</span></div><div class="line"> rsyncSuccess=<span class="variable">$?</span></div><div class="line">done</div><div class="line"></div><div class="line">-- 调用脚本</div><div class="line"><span class="variable">$.</span>/rsync_cp.sh oracle<span class="variable">@10</span>.<span class="number">11.60</span>.<span class="number">15</span><span class="symbol">:/tmp/</span><span class="number">2_1648_867683567</span>.dbf /data/arch/masadb/</div></pre></td></tr></table></figure>
</li>
<li><p>备库上执行前面生成的归档日志注册语句</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1648_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1649_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1650_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1651_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1652_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1653_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1654_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1655_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1656_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1657_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1658_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1659_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1660_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1661_867683567.dbf'</span>;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">REGISTER</span> <span class="keyword">PHYSICAL</span> <span class="keyword">LOGFILE</span> <span class="string">'/tmp/2_1662_867683567.dbf'</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>如果备库打开实时应用，则会自动应用归档文件。若未打开，则在备库上使用下面命令：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">RECOVER</span> <span class="keyword">MANAGED</span> <span class="keyword">STANDBY</span> <span class="keyword">DATABASE</span> <span class="keyword">USING</span> <span class="keyword">CURRENT</span> <span class="keyword">LOGFILE</span> <span class="keyword">DISCONNECT</span> <span class="keyword">FROM</span> <span class="keyword">SESSION</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>查看实时应用情况</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 通过视图</span></div><div class="line"><span class="keyword">set</span> linesize <span class="number">200</span></div><div class="line"><span class="keyword">col</span> <span class="keyword">name</span> <span class="keyword">for</span> a70</div><div class="line"><span class="keyword">alter</span> <span class="keyword">session</span> <span class="keyword">set</span> nls_date_format=<span class="string">'yyyy-mm-dd hh24:mi:ss'</span>;</div><div class="line"><span class="keyword">select</span>  <span class="keyword">NAME</span>,<span class="keyword">THREAD</span>#,FIRST_TIME,<span class="keyword">sequence</span>#,applied <span class="keyword">from</span> v$archived_log <span class="keyword">order</span> <span class="keyword">by</span>  FIRST_TIME,<span class="keyword">THREAD</span>#,<span class="keyword">sequence</span>#,DEST_ID;</div><div class="line"></div><div class="line"><span class="comment">-- 通过alert.log，出现下面类似的语句说明归档日志已经应用了</span></div><div class="line">$ tail -f alertxxx.log</div><div class="line">...</div><div class="line">Sun Jun 05 06:01:16 2016</div><div class="line">Media Recovery Log /data/arch/masadb/2_1648_867683567.dbf</div><div class="line">...</div></pre></td></tr></table></figure>
</li>
<li><p>检查视图或者观察alert.log，是否还有GAP存在，有的话重复上面的步骤直到全部处理GAP。</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">-- 视图</div><div class="line">SQL&gt; select * <span class="keyword">from</span> v<span class="variable">$archive_gap</span>;</div><div class="line"></div><div class="line">-- alert日志</div><div class="line"><span class="built_in">..</span>.</div><div class="line">FAL[client]: Failed <span class="keyword">to</span> request gap sequence</div><div class="line"> GAP - thread 2 sequence 1674-1675</div><div class="line"> DBID 1666528406 branch 867683567</div><div class="line"><span class="built_in">..</span><span class="built_in">..</span></div></pre></td></tr></table></figure>
</li>
<li><p>在主库上开启远程备库传输参数</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SQL&gt; alter<span class="built_in"> system </span><span class="builtin-name">set</span> <span class="attribute">log_archive_dest_state_3</span>=<span class="string">'enable'</span> <span class="attribute">sid</span>=<span class="string">'*'</span>;</div><div class="line">SQL&gt; show parameter log_archive_dest_state_3;</div><div class="line"></div><div class="line">NAME                                <span class="built_in"> TYPE </span>       VALUE</div><div class="line">------------------------------------ ----------- ------------------------------</div><div class="line">log_archive_dest_state_3             string      enable</div></pre></td></tr></table></figure>
</li>
<li><p>在主库上，删除多余的拷贝</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd /tmp</div><div class="line">rm thread_*</div><div class="line"></div><div class="line"><span class="meta">RMAN&gt;</span><span class="bash"> crosscheck archivelog all;</span></div><div class="line"><span class="meta">RMAN&gt;</span><span class="bash"> list archivelog all;</span></div><div class="line"><span class="meta">RMAN&gt;</span><span class="bash"> delete expired archivelog all;</span></div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##故障现象&lt;br&gt;远程机房Dataguard告警系统报警出现GAP，登陆备库查看相关视图和日志&lt;/p&gt;
    
    </summary>
    
    
      <category term="dataguard" scheme="https://arronsh.github.io/lunblog/tags/dataguard/"/>
    
  </entry>
  
  <entry>
    <title>ClickHouse安装</title>
    <link href="https://arronsh.github.io/lunblog/2017/08/12/clickhouse-1/"/>
    <id>https://arronsh.github.io/lunblog/2017/08/12/clickhouse-1/</id>
    <published>2017-08-12T13:06:30.000Z</published>
    <updated>2017-08-14T13:01:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>目前ClickHouse对ubuntu系统支持比较友好，对于centos就差一点。Ubuntu有deb包可以直接安装。对于centos的则需要自己编译。</p>
<a id="more"></a>
<h2 id="一、安装准备"><a href="#一、安装准备" class="headerlink" title="一、安装准备"></a>一、安装准备</h2><h3 id="1-升级gcc"><a href="#1-升级gcc" class="headerlink" title="1. 升级gcc"></a>1. 升级gcc</h3><p>编译ClickHouse需要gcc 6.0以上版本，这里安装6.2.0版本。具体步骤记录如下：</p>
<h4 id="1-1-下载-gcc-6-2-0-源码包-并解压"><a href="#1-1-下载-gcc-6-2-0-源码包-并解压" class="headerlink" title="1.1 下载 gcc-6.2.0 源码包, 并解压"></a>1.1 下载 gcc-6.2.0 源码包, 并解压</h4><pre><code>[root@node1 software]# wget http://ftp.gnu.org/gnu/gcc/gcc-6.2.0/gcc-6.2.0.tar.bz2
[root@node1 software]# tar -jvxf gcc-6.2.0.tar.bz2
[root@node1 software]# cd gcc-6.2.0/
[root@node1 contrib]# vim contrib/download_prerequisites
从 contrib/download_prerequisites 文件内查看需要的依赖包
</code></pre><h4 id="1-2-下载依赖包"><a href="#1-2-下载依赖包" class="headerlink" title="1.2 下载依赖包"></a>1.2 下载依赖包</h4><pre><code>[root@node1 software]# wget ftp://gcc.gnu.org/pub/gcc/infrastructure/mpfr-2.4.2.tar.bz2 [root@node1 software]# wget ftp://gcc.gnu.org/pub/gcc/infrastructure/gmp-4.3.2.tar.bz2
[root@node1 software]# wget ftp://gcc.gnu.org/pub/gcc/infrastructure/mpc-0.8.1.tar.gz
</code></pre><h4 id="1-3-安装gmp"><a href="#1-3-安装gmp" class="headerlink" title="1.3 安装gmp"></a>1.3 安装gmp</h4><pre><code>[root@node1 software]# bzip2 -d gmp-4.3.2.tar.bz2
[root@node1 software]# tar xvf gmp-4.3.2.tar
[root@node1 software]# cd gmp-4.3.2/
[root@node1 gmp-4.3.2]# ./configure --prefix=/opt/gcc-6.2.0
[root@node1 gmp-4.3.2]# make &amp;&amp; make install
</code></pre><h4 id="1-4-安装mpfr"><a href="#1-4-安装mpfr" class="headerlink" title="1.4 安装mpfr"></a>1.4 安装mpfr</h4><pre><code>[root@node1 gmp-4.3.2]# cd ..
[root@node1 software]# bzip2 -d mpfr-2.4.2.tar.bz2
[root@node1 software]# tar xvf mpfr-2.4.2.tar
[root@node1 software]# cd mpfr-2.4.2/
[root@node1 mpfr-2.4.2]# ./configure --prefix=/opt/gcc-6.2.0 --with-gmp=/opt/gcc-6.2.0
[root@node1 mpfr-2.4.2]# make -j
[root@node1 mpfr-2.4.2]# make install
</code></pre><h4 id="1-5-安装mpc"><a href="#1-5-安装mpc" class="headerlink" title="1.5 安装mpc"></a>1.5 安装mpc</h4><pre><code>[root@node1 mpfr-2.4.2]# cd ..
[root@node1 software]# tar xvf mpc-0.8.1.tar.gz
[root@node1 software]# cd mpc-0.8.1/
[root@node1 mpc-0.8.1]# ./configure --prefix=/opt/gcc-6.2.0 --with-gmp=/opt/gcc-6.2.0 --with-mpfr=/opt/gcc-6.2.0
[root@node1 mpc-0.8.1]# make -j
[root@node1 mpc-0.8.1]# make install
</code></pre><h4 id="1-6-安装gcc"><a href="#1-6-安装gcc" class="headerlink" title="1.6 安装gcc"></a>1.6 安装gcc</h4><pre><code>[root@node1 mpc-0.8.1]# cd ..
[root@node1 software]# cd gcc-6.2.0/
[root@node1 gcc-6.2.0]# mkdir build
[root@node1 gcc-6.2.0]# cd build/
[root@node1 build]# ../configure --prefix=/opt/gcc-6.2.0 --with-gmp=/opt/gcc-6.2.0 --with-mpfr=/opt/gcc-6.2.0 --with-mpc=/opt/gcc-6.2.0 -enable-checking=release -enable-languages=c,c++ -disable-multilib
[root@node1 build]# make
[root@node1 build]# make install
</code></pre><p><strong>注意：</strong><br>编译过程中可能会出现类似下面的错误：</p>
<pre><code>checking for suffix of object files... configure: error: cannot compute suffix of object files: cannot compile

See `config.log&apos; for more details.

make[2]: *** [configure-stage1-target-libgcc] Error 1
</code></pre><p>解决方法：<br>将gmp,mpfr,mpc的lib库添加到下面的配置文件中</p>
<pre><code>vi /etc/ld.so.conf
include ld.so.conf.d/*.conf
/usr/local/lib
/opt/gcc-6.2.0/lib   #gmp,mpfr,mpc的lib库安装位置
/usr/lib64

添加保存后记得更新动态库的缓存：
# ldconfig -v
更新后再去重新编译安装。
</code></pre><h4 id="1-7-设置环境变量"><a href="#1-7-设置环境变量" class="headerlink" title="1.7 设置环境变量"></a>1.7 设置环境变量</h4><pre><code>[root@node1 software]# export PATH=/opt/gcc-6.2.0/bin:$PATH
[root@node1 software]# export LD_LIBRARY_PATH=/opt/gcc-6.2.0/lib:$LD_LIBRARY_PATH
</code></pre><h4 id="1-8-查看gcc版本"><a href="#1-8-查看gcc版本" class="headerlink" title="1.8 查看gcc版本"></a>1.8 查看gcc版本</h4><pre><code>[root@node1 ~]# gcc -v
</code></pre><h4 id="1-9-创建软链和环境变量"><a href="#1-9-创建软链和环境变量" class="headerlink" title="1.9 创建软链和环境变量"></a>1.9 创建软链和环境变量</h4><pre><code>[root@node1 ~]# ln -s /usr/local/bin/gcc /usr/local/bin/gcc-6
[root@node1 ~]# ln -s /usr/local/bin/g++ /usr/local/bin/g++-6
[root@node1 ~]# ln -s /usr/local/bin/gcc /usr/local/bin/cc
[root@node1 ~]# ln -s /usr/local/bin/g++ /usr/local/bin/c++
[root@node1 ~]# export CC=gcc-6
[root@node1 ~]# export CXX=g++-6
</code></pre><h3 id="2-安装其他库依赖包"><a href="#2-安装其他库依赖包" class="headerlink" title="2. 安装其他库依赖包"></a>2. 安装其他库依赖包</h3><pre><code>[root@node1 ~]# yum install libicu-devel readline-devel openssl-devel mysql-community-devel unixODBC-devel libtool-ltdl-devel
</code></pre><h2 id="二、安装ClickHouse"><a href="#二、安装ClickHouse" class="headerlink" title="二、安装ClickHouse"></a>二、安装ClickHouse</h2><h3 id="1-下载源码"><a href="#1-下载源码" class="headerlink" title="1. 下载源码"></a>1. 下载源码</h3><pre><code>[root@node1 software]# git clone -b stable https://github.com/yandex/ClickHouse.git
[root@node1 software]# cd ClickHouse
</code></pre><h3 id="2-编译源码"><a href="#2-编译源码" class="headerlink" title="2. 编译源码"></a>2. 编译源码</h3><pre><code>mkdir build
cd build
cmake ..
make -j $THREADS
make install
</code></pre><p><strong>注意：</strong></p>
<blockquote>
<p>在编译过程中发现对内存的消耗比较大，本人虚机开始配置1G内存，编译时经常莫名的中断报错，后查/var/log/message发现出现OOM情况，后把内存加大到4G，能够正常完成编译</p>
</blockquote>
<h2 id="三、简单使用"><a href="#三、简单使用" class="headerlink" title="三、简单使用"></a>三、简单使用</h2><h3 id="1-启动clickhouse"><a href="#1-启动clickhouse" class="headerlink" title="1. 启动clickhouse"></a>1. 启动clickhouse</h3><pre><code>[root@node1 ~]# /usr/local/bin/clickhouse-server --config-file=/usr/local/etc/clickhouse-server/config.xml &amp;
</code></pre><h3 id="2-登录测试"><a href="#2-登录测试" class="headerlink" title="2. 登录测试"></a>2. 登录测试</h3><pre><code>[root@node1 ~]# clickhouse-client
ClickHouse client version 1.1.54245.
Connecting to localhost:9000.
Connected to ClickHouse server version 1.1.54245.

:) select 1;

SELECT 1

┌─1─┐
│ 1 │
└───┘

1 rows in set. Elapsed: 0.002 sec.

:) select now();

SELECT now()

┌───────────────now()─┐
│ 2017-08-09 23:27:30 │
└─────────────────────┘

1 rows in set. Elapsed: 0.001 sec.

:)
</code></pre><h3 id="3-客户端使用"><a href="#3-客户端使用" class="headerlink" title="3. 客户端使用"></a>3. 客户端使用</h3><h4 id="3-1-交互模式"><a href="#3-1-交互模式" class="headerlink" title="3.1 交互模式"></a>3.1 交互模式</h4><pre><code>clickhouse-client
clickhouse-client --host=... --port=... --user=... --password=...
</code></pre><h4 id="3-2-启动多行查询"><a href="#3-2-启动多行查询" class="headerlink" title="3.2 启动多行查询"></a>3.2 启动多行查询</h4><pre><code>clickhouse-client -m
</code></pre><p>对于使用多行建表语句进行建表的时候就需要启用多行查询，否则会报错</p>
<h4 id="3-3-以批处理方式运行查询"><a href="#3-3-以批处理方式运行查询" class="headerlink" title="3.3 以批处理方式运行查询"></a>3.3 以批处理方式运行查询</h4><pre><code>clickhouse-client --query=&apos;SELECT 1&apos;
echo &apos;SELECT 1&apos; | clickhouse-client
</code></pre><h4 id="3-4-从指定格式的文件插入数据"><a href="#3-4-从指定格式的文件插入数据" class="headerlink" title="3.4 从指定格式的文件插入数据"></a>3.4 从指定格式的文件插入数据</h4><pre><code>clickhouse-client --query=&apos;INSERT INTO table VALUES&apos; &lt; data.txt
clickhouse-client --query=&apos;INSERT INTO table FORMAT TabSeparated&apos; &lt; data.tsv
</code></pre><h2 id="四、参考资料"><a href="#四、参考资料" class="headerlink" title="四、参考资料"></a>四、参考资料</h2><ul>
<li><a href="https://www.percona.com/blog/2017/03/17/column-store-database-benchmarks-mariadb-columnstore-vs-clickhouse-vs-apache-spark/" target="_blank" rel="external">Column Store Database Benchmarks: MariaDB ColumnStore vs. Clickhouse vs. Apache Spark</a></li>
<li><a href="https://www.percona.com/blog/2017/02/13/clickhouse-new-opensource-columnar-database/" target="_blank" rel="external">ClickHouse: New Open Source Columnar Database</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/22165241" target="_blank" rel="external">彪悍开源的分析数据库-ClickHouse</a></li>
<li><a href="https://clickhouse.yandex/docs/en/development/build.html" target="_blank" rel="external">How to build ClickHouse on Linux</a></li>
<li><a href="http://www.cnblogs.com/gomysql/p/6651513.html" target="_blank" rel="external">ClickHouse之初步认识</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;目前ClickHouse对ubuntu系统支持比较友好，对于centos就差一点。Ubuntu有deb包可以直接安装。对于centos的则需要自己编译。&lt;/p&gt;
    
    </summary>
    
    
      <category term="clickhouse" scheme="https://arronsh.github.io/lunblog/tags/clickhouse/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://arronsh.github.io/lunblog/2017/08/12/hello-world/"/>
    <id>https://arronsh.github.io/lunblog/2017/08/12/hello-world/</id>
    <published>2017-08-12T07:41:49.000Z</published>
    <updated>2017-08-12T07:41:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
